<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssm.dao.ConfigurationMapper" >
  
  <resultMap id="configurationResultMap" type="com.ssm.domain.Configuration" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="key" property="key" jdbcType="VARCHAR" />
    <result column="value" property="value" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
  	<result column="create_by" property="createBy" />
	<result column="create_time" property="createTime" />
	<result column="update_by" property="updateBy" />
	<result column="update_time" property="updateTime" />
	<result column="enabled_flag" property="enabledFlag" />
  </resultMap>
  <sql id="commonColumns" >
    id, name, key, value, description,create_by,create_time,update_by,update_time,enabled_flag
  </sql>
  <sql id="where">
		<if test="id!=null and id!=''">
			and id=#{id,jdbcType=VARCHAR} 
		</if>
		<if test="name!=null and name!=''">
			and name like '%${name}%'
		</if>
		<if test="key!=null and key!=''">
			and `key` like '%${key}%'
		</if>
		<if test="value!=null and value!=''">
			and `value` like '%${value}%'
		</if>
		<if test="description!=null and description!=''">
			and description=#{description,jdbcType=VARCHAR} 
		</if>
		<if test="createBy!=null and createBy!=''">
			and create_by=#{createBy,jdbcType=VARCHAR} 
		</if>
		<if test="createTime!=null and createTime!=''">
			and create_time=#{createTime,jdbcType=DATE} 
		</if>
		<if test="updateBy!=null and updateBy!=''">
			and update_by=#{updateBy,jdbcType=VARCHAR} 
		</if>
		<if test="updateTime!=null and updateTime!=''">
			and update_time=#{updateTime,jdbcType=DATE} 
		</if>
		<if test="enabledFlag!=null and enabledFlag!=''">
			and enabled_flag=#{enabledFlag,jdbcType=VARCHAR} 
		</if>
	</sql>

  <insert id="save" parameterType="com.ssm.domain.Configuration" >
    insert into t_configuration (<include refid="commonColumns" />)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{key,jdbcType=VARCHAR}, 
      #{value,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
      #{createBy,jdbcType=VARCHAR},#{createTime,jdbcType=DATE},
      #{updateBy,jdbcType=VARCHAR},#{updateTime,jdbcType=DATE},#{enabledFlag,jdbcType=VARCHAR})
  </insert>
  <update id="update" parameterType="com.ssm.domain.Configuration" >
    update t_configuration
    set name = #{name,jdbcType=VARCHAR},
      `key` = #{key,jdbcType=VARCHAR},
      `value` = #{value,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      update_by=#{updateBy,jdbcType=VARCHAR},
      update_time=#{updateTime,jdbcType=DATE},
      enabled_flag=#{enabledFlag,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <select id="getAll" parameterType="com.ssm.domain.Configuration" resultMap="configurationResultMap">
  	select <include refid="commonColumns" />
  	from t_configuration 
  	where 1=1 
  	<include refid="where" />
  </select>
  
  <select id="getByPage" parameterType="com.ssm.domain.Configuration" resultMap="configurationResultMap">
  	select * from t_configuration where 1=1 
  	<include refid="where" />
  	order by `key`
  </select>
  
  <select id="getByPageCount" parameterType="com.ssm.domain.Configuration" resultType="int">
  	select count(1) from t_configuration where 1=1 
  	<include refid="where" />
  </select>
  
  <select id="getById" parameterType="String" resultMap="configurationResultMap">
	select
	<include refid="commonColumns" />
	from t_configuration where id=#{id}
  </select>
  
  <select id="getByKey" parameterType="String" resultType="String">
	select
	`value`
	from t_configuration where `key`=#{_parameter}
  </select>
  
  <select id="getObByKey" parameterType="String" resultMap="configurationResultMap">
	select
	<include refid="commonColumns" />
	from t_configuration where `key`=#{_parameter}
  </select>
  
  <delete id="remove" parameterType="com.ssm.domain.Configuration" flushCache="true">
  	delete from t_configuration
  	where id = #{id}
  </delete>
  
  <update id="setValue" parameterType="com.ssm.domain.Configuration" >
    update t_configuration
    set `value` = #{value,jdbcType=VARCHAR},
      `update_by`=#{updateBy,jdbcType=VARCHAR},
      `update_time`=#{updateTime,jdbcType=DATE}
    where `key` = #{key,jdbcType=VARCHAR}
  </update>
  
</mapper>