<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.quartz.dao.TSystemTimedTaskRunningTimeMapper" >
  <resultMap id="BaseResultMap" type="com.example.quartz.entity.TSystemTimedTaskRunningTime" >
    <id column="run_id" property="runId" jdbcType="VARCHAR" />
    <result column="job_id" property="jobId" jdbcType="VARCHAR" />
    <result column="duration" property="duration" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    run_id, job_id, duration, start_time, end_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_system_timed_task_running_time
    where run_id = #{runId,jdbcType=VARCHAR}
  </select>
  
   <select id="findList" resultMap="BaseResultMap" 
   	    parameterType="com.example.quartz.entity.TSystemTimedTaskRunningTime" >
    select 
    <include refid="Base_Column_List" />
    from t_system_timed_task_running_time
    <where> 1=1 
    	<if test="runId != null" >
	      and run_id = #{runId,jdbcType=VARCHAR}
	    </if>
        <if test="jobId != null" >
	      and job_id = #{jobId,jdbcType=INTEGER}
	    </if>
	    <if test="duration != null" >
	      and duration = #{duration,jdbcType=VARCHAR}
	    </if>
	    <if test="startTime != null" >
	      and start_time = #{startTime,jdbcType=TIMESTAMP}
	    </if>
	    <if test="endTime != null" >
	      and end_time = #{endTime,jdbcType=TIMESTAMP}
	    </if>
    </where>
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_system_timed_task_running_time
    where run_id = #{runId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.example.quartz.entity.TSystemTimedTaskRunningTime" >
    insert into t_system_timed_task_running_time (run_id, job_id, duration, 
      start_time, end_time)
    values (#{runId,jdbcType=VARCHAR}, #{jobId,jdbcType=VARCHAR}, #{duration,jdbcType=VARCHAR}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.quartz.entity.TSystemTimedTaskRunningTime" >
    insert into t_system_timed_task_running_time
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="runId != null" >
        run_id,
      </if>
      <if test="jobId != null" >
        job_id,
      </if>
      <if test="duration != null" >
        duration,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="runId != null" >
        #{runId,jdbcType=VARCHAR},
      </if>
      <if test="jobId != null" >
        #{jobId,jdbcType=VARCHAR},
      </if>
      <if test="duration != null" >
        #{duration,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.quartz.entity.TSystemTimedTaskRunningTime" >
    update t_system_timed_task_running_time
    <set >
      <if test="jobId != null" >
        job_id = #{jobId,jdbcType=VARCHAR},
      </if>
      <if test="duration != null" >
        duration = #{duration,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where run_id = #{runId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.quartz.entity.TSystemTimedTaskRunningTime" >
    update t_system_timed_task_running_time
    set job_id = #{jobId,jdbcType=VARCHAR},
      duration = #{duration,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP}
    where run_id = #{runId,jdbcType=VARCHAR}
  </update>
</mapper>